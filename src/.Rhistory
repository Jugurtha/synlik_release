#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 6, 7), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
library(synlik)
#############
# Trying out the simulators
#############
# Simulating data
# Note: for the final run I would use 2000 years burn in and 299 step because using this parameters
#       we get back the plots of Turchin.
# Full model ( 99 steps is fine )
#set.seed(76735756)
nSteps <- 50
nObs <- 81
res <- volesSimulator(nObs = nObs, nsim = 1000, nBurn = 100, model = "full",
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25,
sigmaProc = 1.5, sigmaObs = 0.15)),
nSteps = nSteps, T0 = 0)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Simulate statist
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue(voles_sl, nIter = 100, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
library(debug)
mtrace(continue.synlik)
mtrace(continue.synMaxlik)
continue.synMaxlik(voles_sl, nIter = 100, obsData = voles_sl@data)
1/( (200) ^ .7 )
tmpControl
qqq()
mtrace.off()
voles_sl <- stochOptim(object  = voles_sl,
nIter = 10,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 10, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
voles_sl <- stochOptim(object  = voles_sl,
nIter = 50,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 50, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 5,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 5, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 10,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 1,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 1, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 2,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 1,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 1, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 2,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 10,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 5,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 5, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 25,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 25, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
control = list("limCov" = c(upper = 20, lower = 20))
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
control = list("limCov" = c(upper = 20, lower = 20)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
Rcpp::sourceCpp('Desktop/All/Dropbox/Work/Programming/Filters/myPOMP/SIR/Source/global_header.hpp')
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/src")
library(synlik)
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
set.seed(10)
nSimul <- 20
nSteps <- 20
obsInterval <- 1/52
nObs <- 521
procParams <- matrix(rep(log(c(N = 50000, gamma = 8, mu = 1/50, iota = 0.01, betaSd = 0.1)), nSimul),
nSimul, 5, byrow = TRUE)
obsParam <- matrix(log(0.6), nSimul, 1)
splineSettings <- c("nBasis" = 3, "degree" = 2, "period" = 1.0)
splineParams <- matrix( log(c(60, 10, 110)), nSimul, 3, byrow = TRUE)
initStates <- matrix(rep(c(S0=6600, I0 = 100, R0 = 43300), nSimul), nSimul, 3, byrow = TRUE)
X <- .Call("sirSimulCpp",
procParams_ = procParams,
obsParam_ = obsParam,
splineParams_ = splineParams,
initStates_ = initStates,
nSteps_ = nSteps,
nSimul_ = nSimul,
obsInterval_ = obsInterval,
nObs_ = nObs,
T0_ = 0.0,
splineSettings_ = splineSettings),
PACKAGE = "synlik")
X <- .Call("sirSimulCpp",
procParams_ = procParams,
obsParam_ = obsParam,
splineParams_ = splineParams,
initStates_ = initStates,
nSteps_ = nSteps,
nSimul_ = nSimul,
obsInterval_ = obsInterval,
nObs_ = nObs,
T0_ = 0.0,
splineSettings_ = splineSettings,
PACKAGE = "synlik")
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
X <- .Call("sirSimulCpp",
procParams_ = procParams,
obsParam_ = obsParam,
splineParams_ = splineParams,
initStates_ = initStates,
nSteps_ = nSteps,
nSimul_ = nSimul,
obsInterval_ = obsInterval,
nObs_ = nObs,
T0_ = 0.0,
splineSettings_ = splineSettings,
PACKAGE = "synlik")
set.seed(10)
nSimul <- 20
nSteps <- 20
obsInterval <- 1/52
nObs <- 521
procParams <- matrix(rep(log(c(N = 50000, gamma = 8, mu = 1/50, iota = 0.01, betaSd = 0.1)), nSimul),
nSimul, 5, byrow = TRUE)
obsParams <- matrix(log(0.6), nSimul, 1)
splineSettings <- c("nBasis" = 3, "degree" = 2, "period" = 1.0)
splineParams <- matrix( log(c(60, 10, 110)), nSimul, 3, byrow = TRUE)
initStates <- matrix(rep(c(S0=6600, I0 = 100, R0 = 43300), nSimul), nSimul, 3, byrow = TRUE)
X <- .Call("sirSimulCpp",
procParams_ = procParams,
obsParams_ = obsParams,
splineParams_ = splineParams,
initStates_ = initStates,
nSteps_ = nSteps,
nSimul_ = nSimul,
obsInterval_ = obsInterval,
nObs_ = nObs,
T0_ = 0.0,
splineSettings_ = splineSettings,
PACKAGE = "synlik")
