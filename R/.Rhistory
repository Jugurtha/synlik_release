plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 6, 7), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
library(synlik)
#############
# Trying out the simulators
#############
# Simulating data
# Note: for the final run I would use 2000 years burn in and 299 step because using this parameters
#       we get back the plots of Turchin.
# Full model ( 99 steps is fine )
#set.seed(76735756)
nSteps <- 50
nObs <- 81
res <- volesSimulator(nObs = nObs, nsim = 1000, nBurn = 100, model = "full",
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25,
sigmaProc = 1.5, sigmaObs = 0.15)),
nSteps = nSteps, T0 = 0)
#### Create Object
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
plot(voles_sl)
#### Simulate statist
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue(voles_sl, nIter = 100, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
library(debug)
mtrace(continue.synlik)
mtrace(continue.synMaxlik)
continue.synMaxlik(voles_sl, nIter = 100, obsData = voles_sl@data)
1/( (200) ^ .7 )
tmpControl
qqq()
mtrace.off()
voles_sl <- stochOptim(object  = voles_sl,
nIter = 10,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 10, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
voles_sl <- stochOptim(object  = voles_sl,
nIter = 50,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 50, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 5,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 5, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 10,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 1,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 1, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 2,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 1,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 1, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 2,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 10,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 5,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 5, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 25,
nsim = 1e3,
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = F)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 25, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
control = list("limCov" = c(upper = 20, lower = 20))
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
control = list("limCov" = c(upper = 20, lower = 20)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
set.seed(4321)
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
##############################################################################
library(synlik)
#############
# Trying out the simulators
#############
voles_sl <- new("synlik",
nObs = 80,
simulator = volesWrap,
summaries = volesStats,
params = log(c(r = 4.5, e = 1, g = 0.12, h = 0.1, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
)
#### Simulate from the object
voles_sl <- simulate(voles_sl)
voles_sl@simulator <- volesBlockWrap
voles_sl@summaries <- volesStatsLarge
voles_sl@params <- log(c(r = 4.5, e = 1, g = 0.12, a = 8, d = 0.04, s = 1.25, sigmaProc = 1.5, sigmaObs = 0.15))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 100,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
voles_sl <- stochOptim(object  = voles_sl,
nIter = 25,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 25, obsData = voles_sl@data)
traceback()
setwd("~/Desktop/All/Dropbox/Work/Programming/New_SL/synlik/R")
voles_sl <- continue.synMaxlik(voles_sl, nIter = 25, obsData = voles_sl@data, multicore = F)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
diag(voles_sl@resultCovar[[25]])
rbind(diag(voles_sl@resultCovar[[24]]), diag(voles_sl@resultCovar[[25]]), diag(voles_sl@resultCovar[[26]]))
rbind(diag(voles_sl@resultCovar[[24]]), diag(voles_sl@resultCovar[[25]]), diag(voles_sl@resultCovar[[50]]))
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
voles_sl <- stochOptim(object  = voles_sl,
nIter = 25,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 25, obsData = voles_sl@data)
traceback()
tail(matrix(1:4, 2, 2), 1)
str(voles_sl)
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
voles_sl <- continue.synMaxlik(voles_sl, nIter = 25, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
mtrce
mtrace
library(debug)
mtrace(continue.synMaxlik)
continue.synMaxlik(voles_sl, nIter = 15, obsData = voles_sl@data)
object@resultGrad
mtrace(stochOptim)
oldGradient
crtl$lag
ctrl$lag
qqq()
mtrace.off()
voles_sl <- stochOptim(object  = voles_sl,
nIter = 15,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 15, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
voles_sl <- simulate(voles_sl)
plot(voles_sl@data, type = 'l')
voles_sl <- stochOptim(object  = voles_sl,
nIter = 15,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
voles_sl <- continue.synMaxlik(voles_sl, nIter = 15, obsData = voles_sl@data)
plot(voles_sl, trans = list("parIndex" = 1:8, "transform" = rep("exp", 8)))
numeric(3)
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
voles_sl <- stochOptim(object  = voles_sl,
nIter = 50,
nsim = 1e3,
#control = list("limCov" = c(upper = 20, lower = 0.05)),
initCov = diag(c(0.05, 0.1, 0.15, 0.1, 0.02, 0.02, 0.1, 0.1))^2,
initPar = log(c(r = 3.5, e = 1.1, g = 0.1, a = 10, d = 0.06, s = 1.1, sigmaProc = 2, sigmaObs = 0.2)),
addRegr = TRUE,
constr = list("indexes" = c(3, 7, 8), "upper" = log(c(Inf, Inf, Inf)), "lower" = log(c(0.05, 0.5, 0.05))),
obsData = voles_sl@data,
multicore = T)
#### Create Object
stable_sl <- new("synlik",
nObs = 1000,
simulator = stableSimul,
summaries = stableStats,
params = c(alpha = log(1.5), beta = 0.1, gamma = log(1), delta = 2)
)
#### Simulate from the object
stable_sl <- simulate(stable_sl)
#### Plotting the object
plot(stable_sl)
##### Stochastic optimization
ctrl_params <- list("gain" = 1,
"lag" = 1
#"maxJump" = rep(0.1, 3)
#"limCov" = c(1, 0.1)
)
stable_sl <- stochOptim(object  = stable_sl,
nIter = 50,
nsim = 1000,
initCov = diag(c(0.1, 0.1, 0.1, 0.1))^2,
initPar = c(alpha = log(1.7), beta = -0.1, gamma = log(1.3), delta = 1.5),
addRegr = TRUE,
const = list("indexes" = c(1, 2), "upper" = c(log(2), 1), "lower" = c(log(1), -1) ),
control = ctrl_params,
multicore = T)
stable_sl <- continue(stable_sl)
plot(stable_sl, trans = list("parIndex" = c(1, 3), "transform" = rep("exp", 2)))
rbind( c(0.1, 0.1, 0.1, 0.1)^2*10, diag(tail(voles_sl@resultCovar, 1)[[1]]), c(0.1, 0.1, 0.1, 0.1)^2/10)
rbind( c(0.1, 0.1, 0.1, 0.1)^2*10, diag(tail(stable_sl@resultCovar, 1)[[1]]), c(0.1, 0.1, 0.1, 0.1)^2/10)
par(mfrow = c(2, 2))
for(ii in 1:4) plot( sapply(stable_sl@resultCovar, function(input) input[ii, ii] ) , type = 'l')
par(mfrow = c(2, 2))
for(ii in 1:4) plot( sapply(stable_sl@resultCovar, function(input) input[ii, ii] )[-1:10] , type = 'l')
par(mfrow = c(2, 2))
for(ii in 1:4) plot( sapply(stable_sl@resultCovar, function(input) input[ii, ii] )[-(1:10)] , type = 'l')
stable_sl <- continue(stable_sl)
par(mfrow = c(2, 2))
for(ii in 1:4) plot( sapply(stable_sl@resultCovar, function(input) input[ii, ii] )[-(1:10)] , type = 'l')
plot(stable_sl, trans = list("parIndex" = c(1, 3), "transform" = rep("exp", 2)))
#### Create Object
varley_sl <- new("synlik",
nObs = 50,
simulator = varleySimul,
summaries = WOOD2010,
params = log(c(r = 10, b = 7.5, C = 2, sigma = 0.2, phi = 15))
)
#### Simulate from the object
varley_sl <- simulate(varley_sl, nBurn = 50)
varley_sl <- simulate(varley_sl, nBurn = 50)
varley_sl <- stochOptim(object  = varley_sl,
nIter = 50,
nsim = 3000,
initCov = diag(c(0.1, 0.1, 0.1, 0.1, 0.1))^2,
initPar = log(c(r = 6, b = 9, C = 2.8, sigma = 0.4, phi = 20)),
addRegr = TRUE, nBurn = 50, obsData = varley_sl@data,
control = ctrl_params)
varley_sl <- continue(varley_sl)
traceback()
stable_sl <- continue.synMaxlik(stable_sl)
varley_sl <- continue.synMaxlik(varley_sl)
varley_sl <- simulate(varley_sl, nBurn = 50)
varley_sl <- stochOptim(object  = varley_sl,
nIter = 50,
nsim = 3000,
initCov = diag(c(0.1, 0.1, 0.1, 0.1, 0.1))^2,
initPar = log(c(r = 6, b = 9, C = 2.8, sigma = 0.4, phi = 20)),
addRegr = TRUE, nBurn = 50, obsData = varley_sl@data,
control = ctrl_params)
traceback()
length(list())
length(list()) == TRUE
length(list(1)) == TRUE
length(NULL)
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
varley_sl <- simulate(varley_sl, nBurn = 50)
varley_sl <- stochOptim(object  = varley_sl,
nIter = 50,
nsim = 3000,
initCov = diag(c(0.1, 0.1, 0.1, 0.1, 0.1))^2,
initPar = log(c(r = 6, b = 9, C = 2.8, sigma = 0.4, phi = 20)),
addRegr = TRUE, nBurn = 50, obsData = varley_sl@data,
control = ctrl_params)
detach("package:synlik", unload=TRUE)
library("synlik", lib.loc="/home/teo/R/x86_64-pc-linux-gnu-library/3.0")
varley_sl <- simulate(varley_sl, nBurn = 50)
varley_sl <- stochOptim(object  = varley_sl,
nIter = 50,
nsim = 3000,
initCov = diag(c(0.1, 0.1, 0.1, 0.1, 0.1))^2,
initPar = log(c(r = 6, b = 9, C = 2.8, sigma = 0.4, phi = 20)),
addRegr = TRUE, nBurn = 50, obsData = varley_sl@data,
control = ctrl_params)
varley_sl <- continue.synMaxlik(varley_sl)
varley_sl <- continue.synMaxlik(varley_sl, obsData = varley_sl@data)
varley_sl <- continue.synMaxlik(varley_sl, nBurn = 50, obsData = varley_sl@data)
plot(stable_sl, trans = list("parIndex" = 1:4, "transform" = rep("exp", 4)))
plot(varley_sl, trans = list("parIndex" = 1:4, "transform" = rep("exp", 4)))
rbind( c(0.1, 0.1, 0.1, 0.1, 0.1)^2*10, diag(tail(stable_sl@resultCovar, 1)[[1]]), c(0.1, 0.1, 0.1, 0.1, 0.1)^2/10)
par(mfrow = c(3, 2))
for(ii in 1:5) plot( sapply(stable_sl@resultCovar, function(input) input[ii, ii] )[-(1:10)] , type = 'l')
rbind( c(0.1, 0.1, 0.1, 0.1, 0.1)^2*10, diag(tail(varley_sl@resultCovar, 1)[[1]]), c(0.1, 0.1, 0.1, 0.1, 0.1)^2/10)
par(mfrow = c(3, 2))
for(ii in 1:5) plot( sapply(varley_sl@resultCovar, function(input) input[ii, ii] )[-(1:10)] , type = 'l')
#### Create Object
ricker_sl <- new("synlik",
nObs = 50,
simulator = rickerSimul,
summaries = WOOD2010,
params = c( logR = 3.8, logSigma = log(0.3), logPhi = log(10) )
)
#### Simulate from the object
ricker_sl <- simulate(ricker_sl, seed = 523, nBurn = 50)
